{
  "name": "Fluxo Completo Imobili√°ria Siqueira Campos - WhatsApp + IA + PostgreSQL",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lead-site",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "webhook-lead-site",
      "name": "üì• Webhook Lead Site",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 300],
      "webhookId": "lead-site"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO leads (nome, telefone, mensagem, status, origem) VALUES ('{{ $json.nome }}', '{{ $json.telefone }}', '{{ $json.mensagem }}', 'PENDENTE', 'SITE') RETURNING id;",
        "options": {}
      },
      "id": "salvar-lead-postgres",
      "name": "ÔøΩÔøΩ Salvar Lead PostgreSQL",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [450, 300],
      "credentials": {
        "postgres": {
          "id": "postgres-siqueira-campos",
          "name": "PostgreSQL Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, nome, whatsapp FROM usuarios WHERE ativo = true AND whatsapp IS NOT NULL AND whatsapp != '' AND papel IN ('CORRETOR', 'ASSISTENTE');",
        "options": {}
      },
      "id": "buscar-corretores-ativos",
      "name": "üë• Buscar Corretores Ativos",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [700, 300],
      "credentials": {
        "postgres": {
          "id": "postgres-siqueira-campos",
          "name": "PostgreSQL Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Verificar se h√° corretores ativos\nconst leadData = items[0].json;\nconst corretores = items[1].json;\n\nif (!corretores || corretores.length === 0) {\n  return [{\n    json: {\n      lead: leadData,\n      semCorretores: true,\n      message: 'Nenhum corretor ativo no momento'\n    }\n  }];\n}\n\n// Preparar dados para envio aos corretores\nreturn corretores.map(corretor => ({\n  json: {\n    leadId: leadData.id,\n    leadNome: leadData.nome,\n    leadTelefone: leadData.telefone,\n    leadMensagem: leadData.mensagem,\n    corretorId: corretor.id,\n    corretorNome: corretor.nome,\n    corretorWhatsApp: corretor.whatsapp\n  }\n}));"
      },
      "id": "processar-corretores",
      "name": "‚öôÔ∏è Processar Corretores",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [950, 300]
    },
    {
      "parameters": {
        "model": "gpt-3.5-turbo",
        "options": {
          "temperature": 0.7,
          "maxTokens": 150
        },
        "messages": {
          "messages": [
            {
              "role": "system",
              "content": "Voc√™ √© um assistente virtual da Siqueira Campos Im√≥veis. Gere uma resposta cordial e profissional para o cliente, informando que um corretor especializado entrar√° em contato em breve. Use o nome do cliente na resposta."
            },
            {
              "role": "user",
              "content": "Cliente: {{ $json.leadNome }}, Mensagem: {{ $json.leadMensagem }}"
            }
          ]
        }
      },
      "id": "gerar-resposta-ia",
      "name": "ü§ñ Gerar Resposta IA",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [1200, 300],
      "credentials": {
        "openAiApi": {
          "id": "openai-siqueira-campos",
          "name": "OpenAI Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.evolutionApiUrl || 'https://api.evolution.whatsapp' }}/message/sendText/{{ $json.instance || 'siqueira' }}",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "{{ $json.apiKey || $credentials.evolutionApi.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.corretorWhatsApp }}"
            },
            {
              "name": "text",
              "value": "üè† *Novo lead no site!*\\n\\nüë§ *Nome:* {{ $json.leadNome }}\\nüìû *Telefone:* {{ $json.leadTelefone }}\\nÔøΩÔøΩÔøΩ *Mensagem:* \"{{ $json.leadMensagem }}\"\\n\\n‚û°Ô∏è Responda *ASSUMIR* para ficar respons√°vel pelo atendimento."
            }
          ]
        },
        "options": {}
      },
      "id": "enviar-whatsapp-corretor",
      "name": "üì± Enviar WhatsApp Corretor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1450, 400],
      "credentials": {
        "evolutionApi": {
          "id": "evolution-siqueira-campos",
          "name": "Evolution API Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.chatBubbleUrl || 'https://chat.siqueicamposimoveis.com.br' }}/api/send-response",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.leadTelefone }}"
            },
            {
              "name": "mensagem",
              "value": "={{ $node['Gerar Resposta IA'].json.choices[0].message.content }}"
            }
          ]
        },
        "options": {}
      },
      "id": "enviar-resposta-cliente",
      "name": "üí¨ Enviar Resposta Cliente",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1450, 200]
    },
    {
      "parameters": {
        "amount": 15,
        "unit": "minutes"
      },
      "id": "aguardar-15-minutos",
      "name": "‚è∞ Aguardar 15 Minutos",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [1700, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT status FROM leads WHERE id = {{ $json.leadId }};",
        "options": {}
      },
      "id": "verificar-status-lead",
      "name": "üîç Verificar Status Lead",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1950, 300],
      "credentials": {
        "postgres": {
          "id": "postgres-siqueira-campos",
          "name": "PostgreSQL Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "operation": "equal",
              "value2": "PENDENTE"
            }
          ]
        }
      },
      "id": "if-lead-pendente",
      "name": "‚ùì Lead Ainda Pendente?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [2200, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE leads SET status = 'EXPIRADO' WHERE id = {{ $json.leadId }};",
        "options": {}
      },
      "id": "marcar-lead-expirado",
      "name": "‚è∞ Marcar Lead Expirado",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [2450, 200],
      "credentials": {
        "postgres": {
          "id": "postgres-siqueira-campos",
          "name": "PostgreSQL Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.evolutionApiUrl || 'https://api.evolution.whatsapp' }}/message/sendText/{{ $json.instance || 'siqueira' }}",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "{{ $json.apiKey || $credentials.evolutionApi.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.leadTelefone }}"
            },
            {
              "name": "text",
              "value": "Ol√° {{ $json.leadNome }}! üòä\\n\\nNo momento nossos corretores est√£o ocupados, mas entraremos em contato em breve para atend√™-lo.\\n\\nObrigado pela prefer√™ncia!\\n\\n*Siqueira Campos Im√≥veis*"
            }
          ]
        },
        "options": {}
      },
      "id": "enviar-fallback-cliente",
      "name": "üìû Enviar Fallback Cliente",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [2700, 200],
      "credentials": {
        "evolutionApi": {
          "id": "evolution-siqueira-campos",
          "name": "Evolution API Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "system@siqueicamposimoveis.com.br",
        "toEmail": "gerente@siqueicamposimoveis.com.br",
        "subject": "‚ö†Ô∏è Lead n√£o atendido - Siqueira Campos Im√≥veis",
        "text": "Lead n√£o foi atendido em 15 minutos:\\n\\nüë§ Nome: {{ $json.leadNome }}\\nüìû Telefone: {{ $json.leadTelefone }}\\nüí¨ Mensagem: {{ $json.leadMensagem }}\\n‚è∞ Hor√°rio: {{ $now.format('DD/MM/YYYY HH:mm') }}\\n\\nPor favor, verifique a disponibilidade dos corretores.",
        "options": {}
      },
      "id": "email-gerente-lead-nao-atendido",
      "name": "üìß Email Gerente - Lead N√£o Atendido",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [2950, 200],
      "credentials": {
        "smtp": {
          "id": "smtp-siqueira-campos",
          "name": "SMTP Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "resposta-corretor",
        "options": {}
      },
      "id": "webhook-resposta-corretor",
      "name": "üì• Webhook Resposta Corretor",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 700],
      "webhookId": "resposta-corretor"
    },
    {
      "parameters": {
        "functionCode": "// Verificar se a mensagem cont√©m 'ASSUMIR'\nconst mensagem = items[0].json.mensagem || items[0].json.text || '';\nconst mensagemLower = mensagem.toLowerCase();\n\nif (mensagemLower.includes('assumir')) {\n  return [{\n    json: {\n      ...items[0].json,\n      assumir: true,\n      action: 'ASSUMIR_LEAD'\n    }\n  }];\n}\n\nreturn [{\n  json: {\n    ...items[0].json,\n    assumir: false,\n    action: 'MENSAGEM_IGNORADA'\n  }\n}];"
      },
      "id": "verificar-assumir",
      "name": "üîç Verificar 'ASSUMIR'",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 700]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.assumir }}",
              "value2": true
            }
          ]
        }
      },
      "id": "if-assumir",
      "name": "‚ùì Quer Assumir?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [700, 700]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE leads SET status = 'ASSUMIDO', corretor_id = '{{ $json.corretorId }}' WHERE id = '{{ $json.leadId }}' AND status = 'PENDENTE' RETURNING *;",
        "options": {}
      },
      "id": "assumir-lead-postgres",
      "name": "‚úÖ Assumir Lead PostgreSQL",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [950, 600],
      "credentials": {
        "postgres": {
          "id": "postgres-siqueira-campos",
          "name": "PostgreSQL Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.evolutionApiUrl || 'https://api.evolution.whatsapp' }}/message/sendText/{{ $json.instance || 'siqueira' }}",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "{{ $json.apiKey || $credentials.evolutionApi.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.corretorWhatsApp }}"
            },
            {
              "name": "text",
              "value": "‚úÖ *Lead assumido com sucesso!*\\n\\nVoc√™ agora √© respons√°vel pelo atendimento do cliente {{ $json.leadNome }}.\\n\\nüìû Telefone: {{ $json.leadTelefone }}\\nüí¨ Mensagem: {{ $json.leadMensagem }}\\n\\nBom atendimento! üòä"
            }
          ]
        },
        "options": {}
      },
      "id": "confirmar-assumir-corretor",
      "name": "‚úÖ Confirmar Assumir - Corretor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1200, 600],
      "credentials": {
        "evolutionApi": {
          "id": "evolution-siqueira-campos",
          "name": "Evolution API Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT id, nome, whatsapp FROM usuarios WHERE ativo = true AND whatsapp IS NOT NULL AND whatsapp != '' AND papel IN ('CORRETOR', 'ASSISTENTE') AND id != '{{ $json.corretorId }}';",
        "options": {}
      },
      "id": "buscar-outros-corretores",
      "name": "üë• Buscar Outros Corretores",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1200, 750],
      "credentials": {
        "postgres": {
          "id": "postgres-siqueira-campos",
          "name": "PostgreSQL Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Preparar notifica√ß√£o para outros corretores\nconst outrosCorretores = items[0].json;\nconst leadData = items[1].json;\n\nif (!outrosCorretores || outrosCorretores.length === 0) {\n  return [];\n}\n\nreturn outrosCorretores.map(corretor => ({\n  json: {\n    corretorWhatsApp: corretor.whatsapp,\n    corretorNome: corretor.nome,\n    leadNome: leadData.leadNome,\n    corretorQueAssumiu: leadData.corretorNome || 'Um corretor'\n  }\n}));"
      },
      "id": "preparar-notificacao-outros",
      "name": "üìù Preparar Notifica√ß√£o Outros",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1450, 750]
    },
    {
      "parameters": {
        "url": "={{ $json.evolutionApiUrl || 'https://api.evolution.whatsapp' }}/message/sendText/{{ $json.instance || 'siqueira' }}",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "{{ $json.apiKey || $credentials.evolutionApi.apiKey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.corretorWhatsApp }}"
            },
            {
              "name": "text",
              "value": "‚ÑπÔ∏è *Lead j√° foi assumido*\\n\\nO lead de {{ $json.leadNome }} j√° foi assumido por {{ $json.corretorQueAssumiu }}.\\n\\nObrigado pela aten√ß√£o! üòä"
            }
          ]
        },
        "options": {}
      },
      "id": "notificar-outros-corretores",
      "name": "üì¢ Notificar Outros Corretores",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1700, 750],
      "credentials": {
        "evolutionApi": {
          "id": "evolution-siqueira-campos",
          "name": "Evolution API Siqueira Campos"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.chatBubbleUrl || 'https://chat.siqueicamposimoveis.com.br' }}/api/send-response",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.leadTelefone }}"
            },
            {
              "name": "mensagem",
              "value": "Ol√° {{ $json.leadNome }}! üòä\\n\\nSeu atendimento foi direcionado para um de nossos corretores especialistas que entrar√° em contato em breve.\\n\\nObrigado pela prefer√™ncia!\\n\\n*Siqueira Campos Im√≥veis*"
            }
          ]
        },
        "options": {}
      },
      "id": "notificar-cliente-assumido",
      "name": "üìû Notificar Cliente Assumido",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1450, 600]
    },
    {
      "parameters": {
        "functionCode": "// Resposta para nenhum corretor dispon√≠vel\nreturn [{\n  json: {\n    telefone: items[0].json.telefone,\n    mensagem: 'Ol√°! No momento n√£o temos corretores dispon√≠veis. Por favor, tente novamente mais tarde ou entre em contato pelo WhatsApp (62) 9 8556-3505. Obrigado!',\n    semCorretores: true\n  }\n}];"
      },
      "id": "resposta-sem-corretores",
      "name": "üö´ Resposta Sem Corretores",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [950, 150]
    },
    {
      "parameters": {
        "url": "={{ $json.chatBubbleUrl || 'https://chat.siqueicamposimoveis.com.br' }}/api/send-response",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $json.telefone }}"
            },
            {
              "name": "mensagem",
              "value": "={{ $json.mensagem }}"
            }
          ]
        },
        "options": {}
      },
      "id": "enviar-resposta-sem-corretores",
      "name": "üìû Enviar Resposta Sem Corretores",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1200, 150]
    }
  ],
  "connections": {
    "üì• Webhook Lead Site": {
      "main": [
        [
          {
            "node": "üíæ Salvar Lead PostgreSQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üíæ Salvar Lead PostgreSQL": {
      "main": [
        [
          {
            "node": "üë• Buscar Corretores Ativos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üë• Buscar Corretores Ativos": {
      "main": [
        [
          {
            "node": "‚öôÔ∏è Processar Corretores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚öôÔ∏è Processar Corretores": {
      "main": [
        [
          {
            "node": "üö´ Resposta Sem Corretores",
            "type": "main",
            "index": 0
          },
          {
            "node": "ü§ñ Gerar Resposta IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ü§ñ Gerar Resposta IA": {
      "main": [
        [
          {
            "node": "üí¨ Enviar Resposta Cliente",
            "type": "main",
            "index": 0
          },
          {
            "node": "üì± Enviar WhatsApp Corretor",
            "type": "main",
            "index": 0
          },
          {
            "node": "‚è∞ Aguardar 15 Minutos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è∞ Aguardar 15 Minutos": {
      "main": [
        [
          {
            "node": "üîç Verificar Status Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Verificar Status Lead": {
      "main": [
        [
          {
            "node": "‚ùì Lead Ainda Pendente?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì Lead Ainda Pendente?": {
      "main": [
        [
          {
            "node": "‚è∞ Marcar Lead Expirado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚è∞ Marcar Lead Expirado": {
      "main": [
        [
          {
            "node": "üìû Enviar Fallback Cliente",
            "type": "main",
            "index": 0
          },
          {
            "node": "üìß Email Gerente - Lead N√£o Atendido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üì• Webhook Resposta Corretor": {
      "main": [
        [
          {
            "node": "üîç Verificar 'ASSUMIR'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üîç Verificar 'ASSUMIR'": {
      "main": [
        [
          {
            "node": "‚ùì Quer Assumir?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚ùì Quer Assumir?": {
      "main": [
        [
          {
            "node": "‚úÖ Assumir Lead PostgreSQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "‚úÖ Assumir Lead PostgreSQL": {
      "main": [
        [
          {
            "node": "‚úÖ Confirmar Assumir - Corretor",
            "type": "main",
            "index": 0
          },
          {
            "node": "üë• Buscar Outros Corretores",
            "type": "main",
            "index": 0
          },
          {
            "node": "üìû Notificar Cliente Assumido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üë• Buscar Outros Corretores": {
      "main": [
        [
          {
            "node": "üìù Preparar Notifica√ß√£o Outros",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üìù Preparar Notifica√ß√£o Outros": {
      "main": [
        [
          {
            "node": "üì¢ Notificar Outros Corretores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "üö´ Resposta Sem Corretores": {
      "main": [
        [
          {
            "node": "üìû Enviar Resposta Sem Corretores",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "imobiliaria",
      "name": "Imobili√°ria"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "whatsapp",
      "name": "WhatsApp"
    },
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "ia",
      "name": "Intelig√™ncia Artificial"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
